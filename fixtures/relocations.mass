ExitProcess :: (status : s32) -> (s64) external("kernel32.dll", "ExitProcess")
GetStdHandle :: (handle : s32) -> (s64) external("kernel32.dll", "GetStdHandle")
WriteFile :: (
  handle : s64,
  buffer : [u8],
  size : s32,
  bytes_written : [s32],
  overlapped : [s64]
) -> (s64) external("kernel32.dll", "WriteFile")
STDOUT_HANDLE :: -11

global_char := cast(u8, "a".bytes.0)
global_char_pointer := &global_char

global_static_string :: "b"

test :: () -> () {
  stdout_handle := GetStdHandle(STDOUT_HANDLE)
  WriteFile(stdout_handle, global_char_pointer, 1, 0, 0)

  WriteFile(stdout_handle, global_static_string.bytes, cast(s32, global_static_string.length), 0, 0)

  // Inline
  WriteFile(stdout_handle, "\n".bytes, cast(s32, "\n".length), 0, 0)
}

main :: () -> () {
  test()
  ExitProcess(0)
}
