ExitProcess :: fn(status : s32) -> (s64) external("kernel32.dll", "ExitProcess")
GetStdHandle :: fn(handle : s32) -> (s64) external("kernel32.dll", "GetStdHandle")
WriteFile :: fn(
  status : s64,
  buffer : [u8],
  size : s32,
  bytes_written : s64,
  overlapped : s64
) -> (s64) external("kernel32.dll", "WriteFile")

cached_stdout_handle := 0
startup(fn() {
  STDOUT_HANDLE :: -11
  cached_stdout_handle = GetStdHandle(STDOUT_HANDLE)
})

main :: fn() {
  message :: "Hello, World!"
  WriteFile(cached_stdout_handle, c_string("Hello, World!"), cast(s32, message.length), 0, 0);
  ExitProcess(0)
}
