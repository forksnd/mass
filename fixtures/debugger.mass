nested :: fn(x0 : i64, x1 : i64, x2 : i64, x3 : i64, x4 : i64, x5 : i64, x6 : i64, x7 : i64) -> () {
  struct := [ .a = cast(s64, 42), .b = [ .nested = cast(s64, 9) ] ]
  arr : s64 * 2 = [1, 2]
  pointer := &struct
  f := fn(x : s64) -> () { }

  unreachable()
}

main :: fn() -> () {
  process :: import("std/process")
  nested(0, 1, 2, 3, 4, 5, 6, 7)
  process.exit(0)
}
